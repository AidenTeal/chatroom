import { StreamChannel } from '@stream-io/node-sdk/dist/src/StreamChannel';
import { StreamClient } from '@stream-io/node-sdk/dist/src/StreamClient';
import { CreateBlockListRequest, CreateChannelTypeRequest, CreateCommandRequest, DeleteBlockListRequest, DeleteChannelTypeRequest, DeleteCommandRequest, ExportChannelsRequest, GetBlockListRequest, GetChannelTypeRequest, GetCommandRequest, GetExportChannelsStatusRequest, QueryChannelsRequest, SearchRequest, UpdateBlockListRequest, UpdateChannelTypeRequest, UpdateCommandRequest } from '@stream-io/node-sdk/dist/src/gen/chat';
export declare class StreamChatClient {
    private readonly streamClient;
    private readonly settingsApi;
    private readonly channelTypesApi;
    private readonly channelsApi;
    private readonly commandsApi;
    constructor(streamClient: StreamClient);
    channel: (type: string, id?: string) => StreamChannel;
    createBlockList: (createBlockListRequest: CreateBlockListRequest) => Promise<import("@stream-io/node-sdk/dist/src/gen/chat").Response>;
    listBlockLists: () => Promise<import("@stream-io/node-sdk/dist/src/gen/chat").ListBlockListResponse>;
    getBlockList: (request: GetBlockListRequest) => Promise<import("@stream-io/node-sdk/dist/src/gen/chat").GetBlockListResponse>;
    updateBlockList: (name: string, updateBlockListRequest: UpdateBlockListRequest) => Promise<import("@stream-io/node-sdk/dist/src/gen/chat").Response>;
    deleteBlockList: (request: DeleteBlockListRequest) => Promise<import("@stream-io/node-sdk/dist/src/gen/chat").Response>;
    createChannelType: (createChannelTypeRequest: CreateChannelTypeRequest) => Promise<import("@stream-io/node-sdk/dist/src/gen/chat").CreateChannelTypeResponse>;
    deleteChannelType: (request: DeleteChannelTypeRequest) => Promise<import("@stream-io/node-sdk/dist/src/gen/chat").Response>;
    getChannelType: (request: GetChannelTypeRequest) => Promise<import("@stream-io/node-sdk/dist/src/gen/chat").Response>;
    listChannelTypes: () => Promise<import("@stream-io/node-sdk/dist/src/gen/chat").ListChannelTypesResponse>;
    updateChannelType: (name: string, updateChannelTypeRequest: UpdateChannelTypeRequest) => Promise<import("@stream-io/node-sdk/dist/src/gen/chat").UpdateChannelTypeResponse>;
    queryChannels: (queryChannelsRequest?: QueryChannelsRequest) => Promise<import("@stream-io/node-sdk/dist/src/gen/chat").ChannelsResponse>;
    searchMessages: (payload?: SearchRequest) => Promise<import("@stream-io/node-sdk/dist/src/gen/chat").SearchResponse>;
    exportChannels: (exportChannelsRequest?: ExportChannelsRequest) => Promise<import("@stream-io/node-sdk/dist/src/gen/chat").ExportChannelsResponse>;
    getExportStatus: (request: GetExportChannelsStatusRequest) => Promise<import("@stream-io/node-sdk/dist/src/gen/chat").GetExportChannelsStatusResponse>;
    listCommands: () => Promise<import("@stream-io/node-sdk/dist/src/gen/chat").ListCommandsResponse>;
    createCommand: (createCommandRequest: CreateCommandRequest) => Promise<import("@stream-io/node-sdk/dist/src/gen/chat").CreateCommandResponse>;
    getCommand: (getCommandRequest: GetCommandRequest) => Promise<import("@stream-io/node-sdk/dist/src/gen/chat").GetCommandResponse>;
    updateCommand: (name: string, updateCommandRequest: UpdateCommandRequest) => Promise<import("@stream-io/node-sdk/dist/src/gen/chat").UpdateCommandResponse>;
    deleteCommand: (request: DeleteCommandRequest) => Promise<import("@stream-io/node-sdk/dist/src/gen/chat").DeleteCommandResponse>;
}
